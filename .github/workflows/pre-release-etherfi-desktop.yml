name: Release etherfi-desktop

on: workflow_dispatch

jobs:
  create-pre-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}-alpha
          release_name: Release v${{ steps.extract_version.outputs.version }}-alpha
          draft: true
          prerelease: true
    outputs:
      release_url: ${{steps.create_release.outputs.upload_url}}

  upload-macos-build:
    needs: create-pre-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.13.0"
          cache: yarn
      - name: Set up Python 3.10.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.13'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Bundle Electron App
        run: yarn buildNode
      - name: Build ETH Python Cli
        run: yarn buildclimac
      - name: Build With Electron Builder
        run: yarn dist --arm64
      - name: List Dist folder
        run: ls dist
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-pre-release.outputs.release_url }}
          asset_path: dist/etherfi-desktop-${{ steps.extract_version.outputs.version }}-mac.tar.gz
          asset_name: etherfi-desktop-v${{ steps.extract_version.outputs.version }}-mac.tar.gz
          asset_content_type: application/zip
          name: mac

  upload-linux-build:
    needs: create-pre-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.13.0"
          cache: yarn
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Bundle Electron App
        run: yarn buildNode
      - name: Build ETH Python Cli
        run: yarn buildcli
      - name: Build With Electron Builder
        run: yarn dist
      - name: List Dist folder
        run: ls dist
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-pre-release.outputs.release_url }}
          asset_path: dist/etherfi-desktop-${{ steps.extract_version.outputs.version }}.tar.gz
          asset_name: etherfi-desktop-v${{ steps.extract_version.outputs.version }}-linux.tar.gz
          asset_content_type: application/zip
          name: linux

  upload-windows-build:
    needs: create-pre-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.13.0"
          cache: yarn
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Bundle Electron App
        run: yarn buildNode
      - name: Build Python
        run: yarn buildcliwin
      - name: Build With Electron Builder
        run: yarn dist
      - name: Show directory
        run: dir
      - name: List Dist folder
        run: ls dist
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-pre-release.outputs.release_url }}
          asset_path: dist/etherfi-desktop-${{ steps.extract_version.outputs.version }}-win.tar.gz
          asset_name: etherfi-desktop-v${{ steps.extract_version.outputs.version }}-win.tar.gz
          asset_content_type: application/zip
          name: win
