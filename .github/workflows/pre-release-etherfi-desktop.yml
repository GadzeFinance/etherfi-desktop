name: Upload Release Asset

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Upload Release Asset - Macos
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.13.0'
          cache: yarn
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Bundle Electron App
        run: yarn buildNode
      - name: Build ETH Python Cli
        run: yarn buildcli
      - name: Build With Electron Builder
        run: yarn dist
      - name: List Dist folder
        run: ls dist
      - name: Get Version
        id: get_version
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const version = JSON.parse(fs.readFileSync('package.json')).version;
            console.log(version);
            process.stdout.write(version);
            return version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Version Environment Variable
        run: echo "VERSION=${{ steps.get_version.outputs.result | replace('"', '') }}" >> $GITHUB_ENV
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/etherfi-desktop-${{ env.VERSION }}-arm64-mac.zip
          asset_name: etherfi-desktop-v${{ env.VERSION }}-arm64-mac
          asset_content_type: application/zip
